<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.safewind.infra.basic.dao.SysUserDao">

    <resultMap type="com.safewind.infra.basic.entity.SysUser" id="SysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="studentId" column="student_id" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.safewind.infra.basic.entity.SysUser" id="SysUserWithInfoMap" extends="SysUserMap">
        <association property="userInfo" javaType="com.safewind.infra.basic.entity.SysUserInfo">
            <id property="id" column="user_info_id"/>
            <result property="sysUserId" column="sys_user_id"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
            <result property="grade" column="grade"/>
            <result property="speciality" column="speciality"/>
            <result property="faculty" column="faculty"/>
            <result property="name" column="name"/>
            <result property="sex" column="sex"/>
            <result property="className" column="class_name"/>
            <result property="delFlag" column="user_info_del_flag"/>
            <result property="createBy" column="user_info_create_by"/>
            <result property="createTime" column="user_info_create_time"/>
            <result property="updateBy" column="user_info_update_by"/>
            <result property="updateTime" column="user_info_update_time"/>
        </association>

        <!-- SysRole -->
        <association property="role" javaType="com.safewind.infra.basic.entity.SysRole">
            <id property="roleId" column="role_id"/>
            <result property="roleName" column="role_name"/>
            <result property="roleKey" column="role_key"/>
            <result property="roleSort" column="role_sort"/>
            <result property="dataScope" column="data_scope"/>
            <result property="delFlag" column="role_del_flag"/>
            <result property="createBy" column="role_create_by"/>
            <result property="createTime" column="role_create_time"/>
            <result property="updateBy" column="role_update_by"/>
            <result property="updateTime" column="role_update_time"/>
        </association>
    </resultMap>

    <sql id="queryUserVo">
        select u.id,
               u.student_id,
               u.password,
               u.email,
               u.openid,
               u.del_flag,
               u.create_by,
               u.create_time,
               u.update_by,
               u.update_time,

               r.role_id,
               r.role_name,
               r.role_key,
               r.role_sort,
               r.data_scope
        from sys_user u
                 left join sys_user_role ur on u.id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="SysUserMap">
        select id,
               student_id,
               password,
               email,
               openid,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time
        from sys_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysUserMap">
        select
        id, student_id, password, email, openid, del_flag, create_by, create_time, update_by, update_time
        from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="studentId != null and studentId != ''">
                and student_id = #{studentId}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="openid != null and openid != ''">
                and openid = #{openid}
            </if>
            <if test="delFlag != null and delFlag != ''">
                and del_flag = #{delFlag}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="studentId != null and studentId != ''">
                and student_id = #{studentId}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="openid != null and openid != ''">
                and openid = #{openid}
            </if>
            <if test="delFlag != null and delFlag != ''">
                and del_flag = #{delFlag}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>


    <!--新增所有列-->
   <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="studentId != null and studentId != ''">student_id,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="openid != null and openid != ''">openid,</if>
        <if test="delFlag != null and delFlag != ''">del_flag,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="createTime != null">create_time,</if>
        <if test="updateBy != null and updateBy != ''">update_by,</if>
        <if test="updateTime != null">update_time,</if>
    </trim>

    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="studentId != null and studentId != ''">#{studentId},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="openid != null and openid != ''">#{openid},</if>
        <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="createTime != null">#{createTime},</if>
        <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
        <if test="updateTime != null">#{updateTime},</if>
    </trim>
</insert>


    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(student_id, password, email, openid, del_flag, create_by, create_time, update_by,
        update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId}, #{entity.password}, #{entity.email}, #{entity.openid}, #{entity.delFlag},
            #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(student_id, password, email, openid, del_flag, create_by, create_time, update_by,
        update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId}, #{entity.password}, #{entity.email}, #{entity.openid}, #{entity.delFlag},
            #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        student_id = values(student_id),
        password = values(password),
        email = values(email),
        openid = values(openid),
        del_flag = values(del_flag),
        create_by = values(create_by),
        create_time = values(create_time),
        update_by = values(update_by),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_user
        <set>
            <if test="studentId != null and studentId != ''">
                student_id = #{studentId},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="openid != null and openid != ''">
                openid = #{openid},
            </if>
            <if test="delFlag != null and delFlag != ''">
                del_flag = #{delFlag},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_user
        where id = #{id}
    </delete>

    <select id="queryByStudentId" resultType="com.safewind.infra.basic.entity.SysUser">
        <include refid="queryUserVo"/>
        WHERE u.student_id = #{studentId}
    </select>

</mapper>

